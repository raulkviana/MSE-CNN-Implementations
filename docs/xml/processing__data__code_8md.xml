<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="processing__data__code_8md" kind="file" language="Markdown">
    <compoundname>processing_data_code.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Code<sp/>to<sp/>process<sp/>the<sp/>images/videos<sp/>into<sp/>labels</highlight></codeline>
<codeline><highlight class="normal">All<sp/>of<sp/>the<sp/>code<sp/>bellow<sp/>can<sp/>be<sp/>found<sp/>in<sp/>this<sp/>[folder](../src/msecnn_raulkviana/useful_scripts).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Encoding</highlight></codeline>
<codeline><highlight class="normal">```<sp/>python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>dataset_utils</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Quantization<sp/>parameter</highlight></codeline>
<codeline><highlight class="normal">QP<sp/>=<sp/>27</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Temporal<sp/>Subsample<sp/>Ratio</highlight></codeline>
<codeline><highlight class="normal">ts<sp/>=<sp/>500</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Directory<sp/>containing<sp/>the<sp/>dataset<sp/>images</highlight></codeline>
<codeline><highlight class="normal">d_path<sp/>=<sp/>&quot;path_for_images_or_videos&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Directory<sp/>containing<sp/>the<sp/>.exe<sp/>file<sp/>extension<sp/>to<sp/>run<sp/>the<sp/>encoder.</highlight></codeline>
<codeline><highlight class="normal">#<sp/>It<sp/>ends<sp/>with<sp/>CPIV\VTM-7.0_Data\bin\vs16\msvc-19.24\x86_64\release<sp/>in<sp/>Windows</highlight></codeline>
<codeline><highlight class="normal">e_path<sp/>=<sp/>&quot;path_to_encoder&quot;<sp/>#<sp/>Example<sp/>for<sp/>windows</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">dataset_utils.encode_dataset(d_path=d_path,<sp/>e_path=e_path,<sp/>ts=ts,<sp/>QP=QP)<sp/>#<sp/>The<sp/>result<sp/>is<sp/>saved<sp/>in<sp/>the<sp/>encoder<sp/>folder</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Generate<sp/>data<sp/>structures</highlight></codeline>
<codeline><highlight class="normal">```<sp/>python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>dataset_utils</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Directory<sp/>containing<sp/>the<sp/>.dat<sp/>files<sp/>with<sp/>CUs<sp/>informations</highlight></codeline>
<codeline><highlight class="normal">d_path<sp/>=<sp/>&quot;path_of_output_directory_of_the_previous_step&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">dataset_utils.unite_labels_v6_mod(dir_path_l=d_path,<sp/>n_output_file=&quot;modifier_of_the_output_files_name&quot;)<sp/><sp/>#<sp/>The<sp/>result<sp/>is<sp/>saved<sp/>in<sp/>the<sp/>same<sp/>folder</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Add<sp/>real<sp/>CTUs</highlight></codeline>
<codeline><highlight class="normal">```<sp/>python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>dataset_utils</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Path<sp/>with<sp/>the<sp/>labels<sp/>processed</highlight></codeline>
<codeline><highlight class="normal">path_dir_l<sp/>=<sp/>r&quot;path_of_output_directory_of_the_previous_step&quot;<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Path<sp/>with<sp/>the<sp/>pictures</highlight></codeline>
<codeline><highlight class="normal">path_dir_p<sp/>=<sp/>r&quot;path_for_images_or_videos&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Create<sp/>new<sp/>dir<sp/>to<sp/>save<sp/>data</highlight></codeline>
<codeline><highlight class="normal">name_mod<sp/>=<sp/>&quot;mod_with_real_CTU&quot;</highlight></codeline>
<codeline><highlight class="normal">new_dir<sp/>=<sp/>path_dir_l<sp/>+<sp/>&quot;/&quot;<sp/>+<sp/>name_mod<sp/>+<sp/>&quot;/&quot;</highlight></codeline>
<codeline><highlight class="normal">try:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>os.mkdir(new_dir)</highlight></codeline>
<codeline><highlight class="normal">except:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Delete<sp/>the<sp/>directory</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>shutil.rmtree(new_dir)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Recreate<sp/>it</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>os.mkdir(new_dir)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Get<sp/>files<sp/>names<sp/>from<sp/>folder</highlight></codeline>
<codeline><highlight class="normal">files_l<sp/>=<sp/>dataset_utils.get_files_from_folder(path_dir_l,<sp/>endswith=&quot;.txt&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>CTU<sp/>Counter<sp/>and<sp/>number<sp/>of<sp/>entries<sp/>to<sp/>accumulate</highlight></codeline>
<codeline><highlight class="normal">ctu_count<sp/>=<sp/>0</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">for<sp/>f<sp/>in<sp/>files_l:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Make<sp/>labels<sp/>path</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>lbls_path<sp/>=<sp/>os.path.join(path_dir_l,<sp/>f)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>List<sp/>to<sp/>save<sp/>entries</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mod_list<sp/>=<sp/>[]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Read<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>orig_list<sp/>=<sp/>dataset_utils.file2lst(lbls_path[:-4])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>data_size<sp/>=<sp/>len(orig_list)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>accum<sp/>=<sp/>data_size</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Verbose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>print(&quot;Processing:&quot;,<sp/>lbls_path)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Loop<sp/>entries</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>k<sp/>in<sp/>range(len(orig_list)):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Build<sp/>all<sp/>requirements<sp/>to<sp/>get<sp/>the<sp/>CU</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_name<sp/>=<sp/>orig_list[k][&apos;pic_name&apos;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img_path<sp/>=<sp/>os.path.join(path_dir_p,<sp/>file_name<sp/>+<sp/>&apos;.yuv&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POC<sp/>=<sp/>orig_list[k][&apos;POC&apos;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_size<sp/>=<sp/>CustomDataset.get_file_size(file_name)<sp/><sp/>#<sp/>Dict<sp/>with<sp/>the<sp/>size<sp/>of<sp/>the<sp/>image</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_size<sp/>=<sp/>(f_size[&apos;height&apos;],<sp/>f_size[&apos;width&apos;])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cu_pos<sp/>=<sp/>(orig_list[k][&quot;stg_1&quot;][&quot;cu_pos&quot;][&quot;CU_loc_top&quot;],<sp/>orig_list[k][&quot;stg_1&quot;][&quot;cu_pos&quot;][&quot;CU_loc_left&quot;])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cu_size<sp/>=<sp/>(orig_list[k][&quot;stg_1&quot;][&quot;cu_size&quot;][&quot;height&quot;],<sp/>orig_list[k][&quot;stg_1&quot;][&quot;cu_size&quot;][&quot;width&quot;])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Verify<sp/>size<sp/>of<sp/>the<sp/>CU</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>cu_size[0]<sp/>!=<sp/>128<sp/>or<sp/>cu_size[1]<sp/>!=<sp/>128:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Get<sp/>CU</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_CU,<sp/>CU_Y,<sp/>CU_U,<sp/>CU_V<sp/>=<sp/>CustomDataset.get_cu(img_path,<sp/>f_size,<sp/>cu_pos,<sp/>cu_size,<sp/>POC)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Convert<sp/>to<sp/>Pytorch<sp/>Tensor</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CU_Y<sp/>=<sp/>torch.tensor(CU_Y.tolist())</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Convert<sp/>to<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CU_Y<sp/>=<sp/>CU_Y.to(dtype=torch.float32)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Add<sp/>dimension</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CU_Y<sp/>=<sp/>torch.unsqueeze(CU_Y,<sp/>0)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Add<sp/>to<sp/>entry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_list[k][&quot;stg_1&quot;][&quot;real_CTU&quot;]<sp/>=<sp/>CU_Y</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Save<sp/>entry<sp/>in<sp/>final<sp/>list</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod_list.append(orig_list[k])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils.echo(&quot;Complete:<sp/>{per:.0%}&quot;.format(per=k/data_size))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(k+1)<sp/>%<sp/>accum<sp/>==<sp/>0:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Save<sp/>list<sp/>to<sp/>file<sp/>with<sp/>the<sp/>same<sp/>name</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_path<sp/>=<sp/>os.path.join(new_dir,<sp/>f[:-4]+str(ctu_count)+<sp/>&quot;_&quot;<sp/>+<sp/>name_mod)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataset_utils.lst2file(mod_list,<sp/>new_path)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Reset<sp/>list</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod_list<sp/>=<sp/>[]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Incremente<sp/>counter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctu_count<sp/>+=<sp/>1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(k<sp/>-<sp/>(len(orig_list)<sp/>-<sp/>1))<sp/>!=<sp/>0:<sp/><sp/>#<sp/>Verify<sp/>if<sp/>there<sp/>is<sp/>still<sp/>entries</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Save<sp/>list<sp/>to<sp/>file<sp/>with<sp/>the<sp/>same<sp/>name</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_path<sp/>=<sp/>os.path.join(new_dir,<sp/>f[:-4]<sp/>+<sp/>str(ctu_count)<sp/>+<sp/>&quot;_&quot;<sp/>+<sp/>name_mod)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataset_utils.lst2file(mod_list,<sp/>new_path)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Reset<sp/>counter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ctu_count<sp/>=<sp/>0</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Retrieve<sp/>essential<sp/>data</highlight></codeline>
<codeline><highlight class="normal">Retrieve<sp/>essential<sp/>data<sp/>for<sp/>the<sp/>for<sp/>stage<sp/>6</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```<sp/>python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>dataset_utils</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">path_dir_l<sp/>=<sp/>&quot;directory_with_the_output_of_the_previous_step&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">print(&quot;Modifying<sp/>struct<sp/>from:&quot;,<sp/>path_dir_l)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">dataset_utils.change_struct_no_dupl_stg_6_complexity_v4(path_dir_l)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Balacing<sp/>data</highlight></codeline>
<codeline><highlight class="normal">```<sp/>python</highlight></codeline>
<codeline><highlight class="normal">import<sp/>dataset_utils</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Directory<sp/>containing<sp/>the<sp/>.txt<sp/>files<sp/>with<sp/>CUs<sp/>informations</highlight></codeline>
<codeline><highlight class="normal">path_dir_l<sp/>=<sp/>&quot;output_of_the_previous_step&quot;<sp/><sp/>#<sp/>Path<sp/>with<sp/>the<sp/>labels<sp/>processed</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">print(&quot;Balance<sp/>data<sp/>in:&quot;,<sp/>path_dir_l)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">dataset_utils.balance_dataset_down_v3(path_dir_l)<sp/><sp/>#<sp/>Downsampling</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="pages_doxygen/processing_data_code.md"/>
  </compounddef>
</doxygen>
