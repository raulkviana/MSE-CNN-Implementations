<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="train__model__utils_8py" kind="file" language="Python">
    <compoundname>train_model_utils.py</compoundname>
    <innernamespace refid="namespacemsecnn__raulkviana">msecnn_raulkviana</innernamespace>
    <innernamespace refid="namespacemsecnn__raulkviana_1_1train__model__utils">msecnn_raulkviana::train_model_utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacemsecnn__raulkviana_1_1train__model__utils" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;@package<sp/>docstring<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">@file<sp/>train_model_utils.py<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">@brief<sp/>Group<sp/>of<sp/>functions<sp/>that<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>used<sp/>directly<sp/>in<sp/>the<sp/>training<sp/>or<sp/>evaluation<sp/>scripts</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">@section<sp/>libraries_train_model_utils<sp/>Libraries<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">-<sp/>os</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">-<sp/>torch</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">-<sp/>numpy</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">-<sp/>matplotlib.pyplot</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">-<sp/>dataset_utils</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">-<sp/>seaborn</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">-<sp/>itertools</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">-<sp/>datetime</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">-<sp/>sklearn.metrics</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">@section<sp/>classes_train_model_utils<sp/>Classes<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">-<sp/>None</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">@section<sp/>functions_train_model_utils<sp/>Functions<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">-<sp/>model_statistics(J_history,<sp/>predicted,<sp/>ground_truth,<sp/>pred_vector,<sp/>gt_vector,</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">-<sp/>compute_conf_matrix(predicted,<sp/>ground_truth)</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">-<sp/>compute_top_k_accuracy(pred_vector,<sp/>gt_vector,<sp/>topk)</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">-<sp/>compute_num_splits_sent(pred_lst)</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">-<sp/>compute_multi_thres_performance(pred_lst,<sp/>gt_lst)</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">-<sp/>compute_ROC_curve(pred_vector,<sp/>gt_vector,<sp/>pred_num)</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">-<sp/>model_simple_metrics(predicted,<sp/>ground_truth)</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">-<sp/>obtain_best_modes(rs,<sp/>pred)</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">-<sp/>obtain_mode(pred)</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">-<sp/>one_hot_enc(tensor,<sp/>num_classes=6)</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">-<sp/>print_parameters(model,<sp/>optimizer)</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">-<sp/>save_model_parameters(dir_name,<sp/>f_name,<sp/>model)</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">-<sp/>save_model(dir_name,<sp/>f_name,<sp/>model,<sp/>optimizer,<sp/>loss,<sp/>acc)</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">-<sp/>load_model_parameters_stg(model,<sp/>path,<sp/>stg,<sp/>dev)</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">-<sp/>load_model_parameters_eval(model,<sp/>path,<sp/>dev)</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">-<sp/>load_model_stg_12_stg_3(model,<sp/>path,<sp/>dev)</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">-<sp/>load_model_stg_3_stg_4(model,<sp/>path,<sp/>dev)</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">-<sp/>load_model_stg_4_stg_5(model,<sp/>path,<sp/>dev)</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">-<sp/>load_model_stg_5_stg_6(model,<sp/>path,<sp/>dev)</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">-<sp/>print_current_time()</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">@section<sp/>global_vars_train_model_utils<sp/>Global<sp/>Variables<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">-<sp/>None</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">@section<sp/>todo_train_model_utils<sp/>TODO<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">-<sp/>None</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight><highlight class="preprocessor">@section</highlight><highlight class="normal"><sp/>license<sp/>License<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal">MIT<sp/>License<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">Copyright<sp/>(c)<sp/>2022<sp/>Raul<sp/>Kevin<sp/>do<sp/>Espirito<sp/>Santo<sp/>Viana</highlight></codeline>
<codeline lineno="52"><highlight class="normal">Permission<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="53"><highlight class="normal">of<sp/>this<sp/>software<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/></highlight><highlight class="stringliteral">&quot;Software&quot;</highlight><highlight class="normal">),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="55"><highlight class="normal">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal">/</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>sell</highlight></codeline>
<codeline lineno="56"><highlight class="normal">copies<sp/>of<sp/>the<sp/>Software,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="58"><highlight class="normal">The<sp/>above<sp/>copyright<sp/>notice<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all</highlight></codeline>
<codeline lineno="59"><highlight class="normal">copies<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="60"><highlight class="normal">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/></highlight><highlight class="stringliteral">&quot;AS<sp/>IS&quot;</highlight><highlight class="normal">,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="61"><highlight class="normal">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="62"><highlight class="normal">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="63"><highlight class="normal">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="64"><highlight class="normal">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="65"><highlight class="normal">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="66"><highlight class="normal">SOFTWARE.</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">@section</highlight><highlight class="normal"><sp/>author_train_model_utils<sp/>Author(s)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">-<sp/>Created<sp/>by<sp/>Raul<sp/>Kevin<sp/>Viana</highlight></codeline>
<codeline lineno="70"><highlight class="normal">-<sp/>Last<sp/>time<sp/>modified<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>2023-01-29<sp/>22:22:04.154941</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral">#<sp/>==============================================================</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral">#<sp/>Imports</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral">#<sp/>==============================================================</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral">import<sp/>os</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral">import<sp/>torch</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral">import<sp/>numpy<sp/>as<sp/>np</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral">import<sp/>matplotlib.pyplot<sp/>as<sp/>plt</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral">import<sp/>dataset_utils</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral">from<sp/>datetime<sp/>import<sp/>datetime</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral">from<sp/>sklearn.metrics<sp/>import<sp/>classification_report,<sp/>confusion_matrix,<sp/>accuracy_score,<sp/>f1_score,<sp/>recall_score,<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>precision_score,<sp/>roc_curve,<sp/>auc</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>seaborn<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sns</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>itertools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cycle</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==============================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">#<sp/>==============================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1afeee7ef82714dbc67d42e0c748e99114" kindref="member">model_statistics</ref>(J_history,<sp/>predicted,<sp/>ground_truth,<sp/>pred_vector,<sp/>gt_vector,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1_list,<sp/>recall_list,<sp/>precision_list,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accuracy_list,<sp/>train_or_val=&quot;train&quot;):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Evaluates<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>metrics,<sp/>such<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>accuracy<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>f1_score.<sp/>This<sp/>version<sp/>plots<sp/>the</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evolution<sp/>of<sp/>the<sp/>metrics:<sp/>f1-score,<sp/>recall,<sp/>precision,<sp/>accuracy.</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>J_history:<sp/>Loss<sp/>function<sp/>values<sp/>over<sp/>iterations</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>predicted:<sp/>List<sp/>of<sp/>predictions<sp/>made<sp/>by<sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>ground_truth:<sp/>List<sp/>of<sp/>the<sp/>ground-truths<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>pred_vector:<sp/>List<sp/>of<sp/>predictions<sp/>made<sp/>by<sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>vectors<sp/>values</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>gt_vector:<sp/>List<sp/>of<sp/>the<sp/>ground-truths<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>vectors<sp/>values</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>train_or_val:<sp/>String<sp/>that<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/>to<sp/>write<sp/>on<sp/>the<sp/>image<sp/>files<sp/>names</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>f1:<sp/>F1<sp/>score</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>recall:<sp/>Recall<sp/>score</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>precision:<sp/>Precision<sp/>score</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>accuracy:<sp/>Accuracy<sp/>score</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Report</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>=<sp/>classification_report(ground_truth,<sp/>predicted)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;classification_report_&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(</highlight><highlight class="stringliteral">&quot;classification_report_&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;classification_report_&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>f.write(report)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>Loss<sp/>function<sp/>throughout<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(J_history,<sp/>label=</highlight><highlight class="stringliteral">&apos;loss&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&quot;Batch<sp/>number&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Loss:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.legend()</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.grid()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Loss_&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.savefig(name)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.clf()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>confusion<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>labels<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;Non-Split&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;QT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HBT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VBT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HTT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VTT&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Draw<sp/>confusion<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>sns.heatmap(confusion_matrix(ground_truth,<sp/>predicted),<sp/>annot=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>fmt=</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;Blues&apos;</highlight><highlight class="normal">,<sp/>yticklabels=labels,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xticklabels=labels)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;confusion_matrix_&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Confusion<sp/>Matrix:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.savefig(name)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.clf()</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure()</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(f1_list,<sp/></highlight><highlight class="stringliteral">&apos;go-&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;F1-score&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(recall_list,<sp/></highlight><highlight class="stringliteral">&apos;bo-&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;Recall&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(accuracy_list,</highlight><highlight class="stringliteral">&apos;ro-&apos;</highlight><highlight class="normal">,label=</highlight><highlight class="stringliteral">&apos;Accuracy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(precision_list,<sp/></highlight><highlight class="stringliteral">&apos;yo-&apos;</highlight><highlight class="normal">,label=</highlight><highlight class="stringliteral">&apos;Precision&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.grid()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.legend()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&quot;Epochs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Metrics:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;metrics_evolution&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.savefig(name)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.clf()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ROC<sp/>Curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>ROC<sp/>curve<sp/>and<sp/>ROC<sp/>area<sp/>for<sp/>each<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>fpr<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>tpr<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>roc_auc<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>y,<sp/>y_score<sp/>=<sp/>np.array(gt_vector),<sp/>np.array(pred_vector)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Number<sp/>of<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>n_classes<sp/>=<sp/>np.array(predicted).max()<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obtain<sp/>ROC<sp/>curve<sp/>values<sp/>and<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_classes):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpr[i],<sp/>tpr[i],<sp/>_<sp/>=<sp/>roc_curve(y[:,<sp/>i],<sp/>y_score[:,<sp/>i])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roc_auc[i]<sp/>=<sp/>auc(fpr[i],<sp/>tpr[i])</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>micro-average<sp/>ROC<sp/>curve<sp/>and<sp/>ROC<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>fpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">],<sp/>tpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">],<sp/>_<sp/>=<sp/>roc_curve(y.ravel(),<sp/>y_score.ravel())</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>roc_auc[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>auc(fpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">],<sp/>tpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>ROC<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First<sp/>aggregate<sp/>all<sp/>false<sp/>positive<sp/>rates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>all_fpr<sp/>=<sp/>np.unique(np.concatenate([fpr[i]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_classes)]))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Then<sp/>interpolate<sp/>all<sp/>ROC<sp/>curves<sp/>at<sp/>this<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_tpr<sp/>=<sp/>np.zeros_like(all_fpr)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_classes):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_tpr<sp/>+=<sp/>np.interp(all_fpr,<sp/>fpr[i],<sp/>tpr[i])</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Finally<sp/>average<sp/>it<sp/>and<sp/>compute<sp/>AUC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_tpr<sp/>/=<sp/>n_classes</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>fpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>all_fpr</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>tpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>mean_tpr</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>roc_auc[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>auc(fpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">],<sp/>tpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Plot<sp/>all<sp/>ROC<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>lw<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>colors<sp/>=<sp/>cycle([</highlight><highlight class="stringliteral">&quot;aqua&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;darkorange&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cornflowerblue&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>color<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(range(n_classes),<sp/>colors):</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpr[i],</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tpr[i],</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color=color,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lw=lw,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label=</highlight><highlight class="stringliteral">&quot;ROC<sp/>curve<sp/>of<sp/>class<sp/>{0}<sp/>(area<sp/>=<sp/>{1:0.2f})&quot;</highlight><highlight class="normal">.format(i,<sp/>roc_auc[i]),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot([0,<sp/>1],<sp/>[0,<sp/>1],<sp/></highlight><highlight class="stringliteral">&quot;k--&quot;</highlight><highlight class="normal">,<sp/>lw=lw)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlim([0.0,<sp/>1.0])</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylim([0.0,<sp/>1.05])</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&quot;False<sp/>Positive<sp/>Rate&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&quot;True<sp/>Positive<sp/>Rate&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Some<sp/>extension<sp/>of<sp/>Receiver<sp/>operating<sp/>characteristic<sp/>to<sp/>multiclass&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.legend(loc=</highlight><highlight class="stringliteral">&quot;lower<sp/>right&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.grid()</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROC_curve&quot;</highlight><highlight class="normal"><sp/>+<sp/>train_or_val<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.savefig(name)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.clf()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1aaba41048718e061e48e3fef373b9f546" kindref="member">right_size</ref>(CUs):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Verify<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>CU<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>the<sp/>right<sp/>size:<sp/>height<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>to<sp/>be<sp/>lower<sp/>than<sp/>width</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>CUs:<sp/>Feature<sp/>maps</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>Boolean<sp/>value<sp/>indicating<sp/>the<sp/>right<sp/>size</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>CUs.shape[-2]<sp/>&gt;<sp/>CUs.shape[-1]<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a22037a90eee86799850c3a765e4da26f" kindref="member">compute_conf_matrix</ref>(predicted,<sp/>ground_truth):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Computes<sp/>the<sp/>confusion<sp/>matrix</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>predicted:<sp/>List<sp/>of<sp/>predictions<sp/>made<sp/>by<sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>ground_truth:<sp/>List<sp/>of<sp/>the<sp/>ground-truths<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>accuracy:<sp/>Accuracy<sp/>score</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>confusion<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>labels<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;Non-Split&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;QT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HBT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VBT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HTT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VTT&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Draw<sp/>confusion<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>c_ma<sp/>=<sp/>confusion_matrix(ground_truth,<sp/>predicted)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obtain<sp/>amount<sp/>of<sp/>examples<sp/>for<sp/>each<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>amount_lst<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(c_ma)):</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount_lst.append(c_ma[k].sum())</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>map<sp/>=<sp/>sns.heatmap(c_ma<sp/>/<sp/>np.array([amount_lst]).T,<sp/>annot=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>fmt=</highlight><highlight class="stringliteral">&apos;.2f&apos;</highlight><highlight class="normal">,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;Blues&apos;</highlight><highlight class="normal">,<sp/>yticklabels=labels,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xticklabels=labels)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>map.set(xlabel=</highlight><highlight class="stringliteral">&quot;Predicted&quot;</highlight><highlight class="normal">,<sp/>ylabel=</highlight><highlight class="stringliteral">&quot;Ground-truth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map.get_figure()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a9208690996ff3dc9692f9e77f6e176a0" kindref="member">compute_top_k_accuracy</ref>(pred_vector,<sp/>gt_vector,<sp/>topk):</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Computes<sp/>the<sp/>top<sp/>k<sp/>accuracy<sp/>score</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>predicted:<sp/>List<sp/>of<sp/>predictions<sp/>made<sp/>by<sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>probabilities<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>split<sp/>(pytorch<sp/>tensor)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>ground_truth:<sp/>List<sp/>of<sp/>the<sp/>ground-truths<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value<sp/>(pytorch<sp/>tensor)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>topk:<sp/>Number<sp/>of<sp/>best<sp/>accuricies<sp/>to<sp/>choose</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>accuracy:<sp/>Accuracy<sp/>score</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>n_entries<sp/>=<sp/>gt_vector.shape[0]</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>top<sp/>predictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>top_pred<sp/>=<sp/>torch.topk(pred_vector,<sp/>topk)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>idxs<sp/>=<sp/>top_pred[1]<sp/><sp/></highlight><highlight class="comment">#<sp/>Indexs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_entries):</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gt_vector[n]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>idxs[n]:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>accuracy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>res<sp/>/<sp/>n_entries<sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1ad9aeb6ce29f45cc766ba7320d34670c1" kindref="member">compute_num_splits_sent</ref>(pred_lst):</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Computes<sp/>the<sp/>num<sp/>of<sp/>splits<sp/>that<sp/>would<sp/>be<sp/>analyzed<sp/>by<sp/>the<sp/>encoder</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>predicted:<sp/>List<sp/>of<sp/>predictions<sp/>made<sp/>by<sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>probabilities<sp/>values</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>res:<sp/>Mean<sp/>of<sp/>number<sp/>of<sp/>splits<sp/>sent</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>n_entries<sp/>=<sp/>len(pred_lst)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/><sp/>=<sp/>[len(p)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pred_lst]</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>sum(temp)/n_entries</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1aa3cb64ee0fbaa82878681fac367eadf7" kindref="member">compute_multi_thres_performance</ref>(pred_lst,<sp/>gt_lst):</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Computes<sp/>multi-threshold<sp/>performance</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>predicted:<sp/>List<sp/>of<sp/>predictions<sp/>made<sp/>by<sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>integer<sp/>value</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>ground_truth:<sp/>List<sp/>of<sp/>the<sp/>ground-truths<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>res:<sp/>Accuracy<sp/>score</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>n_entries<sp/>=<sp/>len(gt_lst)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/><sp/>=<sp/>[</highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(pred_lst,<sp/>gt_lst)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>l]<sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>ground<sp/>truth<sp/>is<sp/>within<sp/>the<sp/>predictions,<sp/>add<sp/>1<sp/>to<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>len(temp)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>accuracy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>res<sp/>/<sp/>n_entries<sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a2538c5927aded1286f7e8220ff22e9cb" kindref="member">compute_ROC_curve</ref>(pred_vector,<sp/>gt_vector,<sp/>pred_num):</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Computes<sp/>ROC<sp/>curve</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>pred_vector:<sp/>List<sp/>of<sp/>predictions<sp/>vectors<sp/>(one-hot<sp/>encoded)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>gt_vector:<sp/>List<sp/>of<sp/>the<sp/>ground-truths<sp/>vectors<sp/>(one-hot<sp/>encoded)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>pred_num:<sp/>List<sp/>of<sp/>the<sp/>predicitons<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>numbers<sp/>corresponding<sp/>to<sp/>partitions</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>[out]<sp/>figure:<sp/>Figure<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>ROC<sp/>curve</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ROC<sp/>Curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>ROC<sp/>curve<sp/>and<sp/>ROC<sp/>area<sp/>for<sp/>each<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>fpr<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>tpr<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>roc_auc<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>y,<sp/>y_score<sp/>=<sp/>np.array(gt_vector),<sp/>np.array(pred_vector)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Number<sp/>of<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>n_classes<sp/>=<sp/>np.array(pred_num).max()<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obtain<sp/>ROC<sp/>curve<sp/>values<sp/>and<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_classes):</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpr[i],<sp/>tpr[i],<sp/>_<sp/>=<sp/>roc_curve(y[:,<sp/>i],<sp/>y_score[:,<sp/>i])</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roc_auc[i]<sp/>=<sp/>auc(fpr[i],<sp/>tpr[i])</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>micro-average<sp/>ROC<sp/>curve<sp/>and<sp/>ROC<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>fpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">],<sp/>tpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">],<sp/>_<sp/>=<sp/>roc_curve(y.ravel(),<sp/>y_score.ravel())</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>roc_auc[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>auc(fpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">],<sp/>tpr[</highlight><highlight class="stringliteral">&quot;micro&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>ROC<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First<sp/>aggregate<sp/>all<sp/>false<sp/>positive<sp/>rates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>all_fpr<sp/>=<sp/>np.unique(np.concatenate([fpr[i]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_classes)]))</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Then<sp/>interpolate<sp/>all<sp/>ROC<sp/>curves<sp/>at<sp/>this<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_tpr<sp/>=<sp/>np.zeros_like(all_fpr)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_classes):</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_tpr<sp/>+=<sp/>np.interp(all_fpr,<sp/>fpr[i],<sp/>tpr[i])</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Finally<sp/>average<sp/>it<sp/>and<sp/>compute<sp/>AUC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_tpr<sp/>/=<sp/>n_classes</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>fpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>all_fpr</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>tpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>mean_tpr</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>roc_auc[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">]<sp/>=<sp/>auc(fpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">],<sp/>tpr[</highlight><highlight class="stringliteral">&quot;macro&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Plot<sp/>all<sp/>ROC<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>figure<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>lw<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>colors<sp/>=<sp/>cycle([</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>color<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(range(n_classes),<sp/>colors):</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.plot(</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpr[i],</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tpr[i],</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color=color,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lw=lw,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label=</highlight><highlight class="stringliteral">&quot;ROC<sp/>curve<sp/>of<sp/>class<sp/>{0}<sp/>(area<sp/>=<sp/>{1:0.2f})&quot;</highlight><highlight class="normal">.format(i,<sp/>roc_auc[i]),</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot([0,<sp/>1],<sp/>[0,<sp/>1],<sp/></highlight><highlight class="stringliteral">&quot;k--&quot;</highlight><highlight class="normal">,<sp/>lw=lw)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlim([0.0,<sp/>1.0])</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylim([0.0,<sp/>1.05])</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&quot;False<sp/>Positive<sp/>Rate&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&quot;True<sp/>Positive<sp/>Rate&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Some<sp/>extension<sp/>of<sp/>Receiver<sp/>operating<sp/>characteristic<sp/>to<sp/>multiclass&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.legend(loc=</highlight><highlight class="stringliteral">&quot;lower<sp/>right&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.grid()</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>figure</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a964adadaca962cbcbc5078977779311b" kindref="member">model_simple_metrics</ref>(predicted,<sp/>ground_truth):</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Evaluates<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>metrics<sp/>4<sp/>metrics,<sp/>such<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>accuracy,<sp/>f1_score,<sp/>recall<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>precision</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>predicted:<sp/>List<sp/>of<sp/>predictions<sp/>made<sp/>by<sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>ground_truth:<sp/>List<sp/>of<sp/>the<sp/>ground-truths<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>single<sp/>value</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>f1:<sp/>F1<sp/>score</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>recall:<sp/>Recall<sp/>score</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>precision:<sp/>Precision<sp/>score</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>accuracy:<sp/>Accuracy<sp/>score</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>accuracy<sp/>=<sp/>accuracy_score(ground_truth,<sp/>predicted)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>f1_score(ground_truth,<sp/>predicted,<sp/>average=</highlight><highlight class="stringliteral">&apos;weighted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>recall<sp/>=<sp/>recall_score(ground_truth,<sp/>predicted,<sp/>average=</highlight><highlight class="stringliteral">&apos;weighted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>precision<sp/>=<sp/>precision_score(ground_truth,<sp/>predicted,<sp/>average=</highlight><highlight class="stringliteral">&apos;weighted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f1,<sp/>recall,<sp/>precision,<sp/>accuracy</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a993070f8c8fdf03d09c5cc98c0ee31d7" kindref="member">obtain_best_modes</ref>(rs,<sp/>pred):</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Converts<sp/>a<sp/>prediction<sp/>into<sp/>a<sp/>specific<sp/>number<sp/>that<sp/>corresponds<sp/>to<sp/>the<sp/>best<sp/>way<sp/>to<sp/>split<sp/>(non-split,<sp/>quad<sp/>tree,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binary<sp/>vert<sp/>tree...)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>rs:<sp/>Thresholds</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>pred:<sp/>Predicted<sp/>values<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>one-hot<sp/>encoding</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>mode:<sp/>Predicted<sp/>values<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>number<sp/>of<sp/>the<sp/>mode</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obtain<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>prediction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>torch.reshape(torch.max(pred,<sp/>dim=1)[0],<sp/>shape=(-1,<sp/>1))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obtain<sp/>lowest<sp/>possible<sp/>value<sp/>for<sp/>each<sp/>prediction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>y_max_rs<sp/>=<sp/>y_max<sp/>*<sp/>rs</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obtain<sp/>logic<sp/>truth<sp/>where<sp/>preds&gt;=y_max_rs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>search_RD_logic<sp/>=<sp/>pred<sp/>&gt;=<sp/>y_max_rs</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obtain<sp/>the<sp/>indexs<sp/>that<sp/>are<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>search_RD<sp/>=<sp/>torch.nonzero(torch.squeeze(search_RD_logic.int()),<sp/>as_tuple=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>search_RD</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a9a466ae6eaee510daf4fdc575bf380cd" kindref="member">obtain_mode</ref>(pred):</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Converts<sp/>a<sp/>prediction<sp/>into<sp/>a<sp/>specific<sp/>number<sp/>that<sp/>corresponds<sp/>to<sp/>the<sp/>best<sp/>way<sp/>to<sp/>split<sp/>(non-split,<sp/>quad<sp/>tree,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binary<sp/>vert<sp/>tree...)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>pred:<sp/>Predicted<sp/>values<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>one-hot<sp/>encoding</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>mode:<sp/>Predicted<sp/>values<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>number<sp/>of<sp/>the<sp/>mode</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>torch.argmax(pred,<sp/>dim=1)</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mode</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a79494642e232d1c076a7b5fa7466b31e" kindref="member">one_hot_enc</ref>(tensor,<sp/>num_classes=6):</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="446"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Implements<sp/>one-hot<sp/>encoding<sp/>to<sp/>a<sp/>specific<sp/>tensor<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>set<sp/>of<sp/>split<sp/>modes</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>tensor:<sp/>Tensor<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>a<sp/>set<sp/>of<sp/>split<sp/>modes</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>num_classes:<sp/>Number<sp/>classes<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>tensor</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>new_tensor:<sp/>Tensor<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>one-hot<sp/>encoding<sp/>implemented</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>new_tensor<sp/>=<sp/>torch.reshape(torch.nn.functional.one_hot(tensor,<sp/>num_classes=num_classes),<sp/>shape=(-1,<sp/>num_classes))</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_tensor</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a3e657e72d3f33b63fbd784f87e3eb8e9" kindref="member">print_parameters</ref>(model,<sp/>optimizer):</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Prints<sp/>the<sp/>parameters<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>state<sp/>dictionaries<sp/>of<sp/>the<sp/>model<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>optimizer</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>that<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>optimizer:<sp/>Optimizer<sp/>that<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>printed</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>model&apos;s<sp/>state_dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Model&apos;s<sp/>state_dict:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>param_tensor<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model.state_dict():</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(param_tensor,<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>model.state_dict()[param_tensor].size())</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>optimizer&apos;s<sp/>state_dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Optimizer&apos;s<sp/>state_dict:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>optimizer.state_dict():</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(var_name,<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>optimizer.state_dict()[var_name])</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1adb76e5e1e7fb9398be537a21810f4fcf" kindref="member">save_model_parameters</ref>(dir_name,<sp/>f_name,<sp/>model):</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Saves<sp/>only<sp/>the<sp/>model<sp/>parameters<sp/>to<sp/>a<sp/>specific<sp/>folder</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dir_name:<sp/>Name<sp/>of<sp/>the<sp/>directory<sp/>where<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>f_name:<sp/>Name<sp/>of<sp/>the<sp/>file<sp/>that<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>saved<sp/>on</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>directory<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>CURR_DIR<sp/>=<sp/>os.getcwd()<sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>current<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkdir(CURR_DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>dir_name)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>dir_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>f_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.pth&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>torch.save(model.state_dict(),<sp/>file_path)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Saved<sp/>PyTorch<sp/>Model<sp/>State<sp/>to&quot;</highlight><highlight class="normal">,<sp/>file_path)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1af861829fd2bb377d08cf101471987aa5" kindref="member">save_model</ref>(dir_name,<sp/>f_name,<sp/>model,<sp/>optimizer,<sp/>loss,<sp/>acc):</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="508"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Saves<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>model<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>of<sp/>the<sp/>optimizer,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>also<sp/>the<sp/>loss<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>the<sp/>accuracy.<sp/>These<sp/>are<sp/>saved</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>into<sp/>the<sp/>folder<sp/>specified<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dir_name:<sp/>Name<sp/>of<sp/>the<sp/>directory<sp/>where<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>f_name:<sp/>Name<sp/>of<sp/>the<sp/>file<sp/>that<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>saved<sp/>on</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>optimizer:<sp/>Optimizer<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>saved</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>loss:<sp/>Loss<sp/>value</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>acc:<sp/>Accuracy<sp/>value</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>directory<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_dir<sp/>=<sp/>os.getcwd()<sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>current<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.mkdir(curr_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>dir_name)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>torch.save({</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;model_state_dict&apos;</highlight><highlight class="normal">:<sp/>model.state_dict(),</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;optimizer_state_dict&apos;</highlight><highlight class="normal">:<sp/>optimizer.state_dict(),</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;loss&apos;</highlight><highlight class="normal">:<sp/>loss,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;acc&apos;</highlight><highlight class="normal">:<sp/>acc</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/>dir_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>f_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.tar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a6d4bba83279a0482b9d5c1b0d006b18e" kindref="member">load_model_parameters_stg</ref>(model,<sp/>path,<sp/>stg,<sp/>dev):</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Loads<sp/>all<sp/>stages<sp/>but<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>stage<sp/>number<sp/></highlight><highlight class="stringliteral">&apos;stg&apos;</highlight><highlight class="normal"><sp/>has<sp/>the<sp/>same<sp/>parameters<sp/>has<sp/>the<sp/>previous</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>path:<sp/>Path/Folder<sp/>containing<sp/>the<sp/>files<sp/>that<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>stg:<sp/>Integer<sp/>containing<sp/>the<sp/>last<sp/>stage<sp/>number<sp/>to<sp/>load</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dev:<sp/>Device<sp/>do<sp/>load<sp/>the<sp/>model<sp/>to</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>model:<sp/>Model<sp/>loaded<sp/>tuple</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="545"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="546"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>files<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>dataset_utils.get_files_from_folder(path,<sp/>endswith=</highlight><highlight class="stringliteral">&quot;.pth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>files.sort()</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>files[i]</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[i].load_state_dict(m)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>avoid<sp/>inconsistent<sp/>inference<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[i].eval()</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Specific<sp/>stage<sp/>must<sp/>have<sp/>the<sp/>same<sp/>parameters<sp/>of<sp/>the<sp/>previous<sp/>stage<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>files[stg-2]</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>model[stg-1].load_state_dict(m)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>avoid<sp/>inconsistent<sp/>inference<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>model[stg-1].eval()</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a335386ac8c610e1db1871d3700b6ad98" kindref="member">load_model_parameters_eval</ref>(model,<sp/>path,<sp/>dev):</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="588"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Loads<sp/>all<sp/>stages,<sp/>meant<sp/>to<sp/>be<sp/>used<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>eval_model<sp/>script</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>path:<sp/>Path/Folder<sp/>containing<sp/>the<sp/>files<sp/>that<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dev:<sp/>Device<sp/>do<sp/>load<sp/>the<sp/>model<sp/>to</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[out]<sp/>model:<sp/>Model<sp/>loaded<sp/>tuple</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="595"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>files<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>dataset_utils.get_files_from_folder(path,<sp/>endswith=</highlight><highlight class="stringliteral">&quot;.pth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>files.sort()</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>files[i]</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[i].load_state_dict(m)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>avoid<sp/>inconsistent<sp/>inference<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[i].eval()</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a1a11d507d70a0c1706812d23ba767eac" kindref="member">load_model_stg_12_stg_3</ref>(model,<sp/>path,<sp/>dev):</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="622"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>THis<sp/>function<sp/>makes<sp/>it<sp/>possible<sp/>to<sp/>load<sp/>parameters<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>first<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>second<sp/>stage<sp/>to<sp/>the<sp/>third</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>loaded,<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>2<sp/>models<sp/>(one<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>first<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>second<sp/>stage,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>another<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>third<sp/>stage)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>path:<sp/>Path/Folder<sp/>containing<sp/>the<sp/>files<sp/>that<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dev:<sp/>Device<sp/>to<sp/>load<sp/>the<sp/>model<sp/>to</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="628"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="629"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>files<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>dataset_utils.get_files_from_folder(path,<sp/>endswith=</highlight><highlight class="stringliteral">&quot;.pth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>files.sort()</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[0]</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>model[0].load_state_dict(stg_1_2)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>specific<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>torch.no_grad():</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Conditional<sp/>convolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv[0].weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv_stg2.0.weight&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv[0].bias.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv_stg2.0.bias&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv[1].weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv_stg2.1.weight&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv_no_activation[0].weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv_no_activation_stg2.0.weight&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv_no_activation[0].bias.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv_no_activation_stg2.0.bias&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv2[0].weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv2_stg2.0.weight&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv2[0].bias.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv2_stg2.0.bias&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv2[1].weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv2_stg2.1.weight&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv_no_activation2[0].weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv_no_activation2_stg2.0.weight&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].simple_conv_no_activation2[0].bias.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;simple_conv_no_activation2_stg2.0.bias&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].activation_PRelu.weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;activation_PRelu_stg2.weight&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model[1].activation_PRelu2.weight.copy_(stg_1_2[</highlight><highlight class="stringliteral">&quot;activation_PRelu2_stg2.weight&quot;</highlight><highlight class="normal">])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>avoid<sp/>inconsistent<sp/>inference<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.eval()</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a7fc7ec27e310efc1d10ea490dd27cddf" kindref="member">load_model_stg_3_stg_4</ref>(model,<sp/>path,<sp/>dev):</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="676"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>This<sp/>function<sp/>makes<sp/>it<sp/>possible<sp/>to<sp/>load<sp/>parameters<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>third<sp/>stage<sp/>to<sp/>the<sp/>fourth</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>loaded,<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>2<sp/>models<sp/>(one<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>first<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>second<sp/>stage,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>another<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>third<sp/>stage)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>path:<sp/>Path/Folder<sp/>containing<sp/>the<sp/>files<sp/>that<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dev:<sp/>Device<sp/>to<sp/>load<sp/>the<sp/>model<sp/>to</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="682"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="683"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>files<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>dataset_utils.get_files_from_folder(path,<sp/>endswith=</highlight><highlight class="stringliteral">&quot;.pth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>1<sp/>and<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>model[0].load_state_dict(stg_1_2)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>model[-2].load_state_dict(stg_3)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>model[-1].load_state_dict(stg_3)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>avoid<sp/>inconsistent<sp/>inference<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model:</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.eval()</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a02cbf7d191b5968da6f4731d8ae10e6f" kindref="member">load_model_stg_4_stg_5</ref>(model,<sp/>path,<sp/>dev):</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="737"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>This<sp/>function<sp/>makes<sp/>it<sp/>possible<sp/>to<sp/>load<sp/>parameters<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>fourth<sp/>stage<sp/>to<sp/>the<sp/>fith</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>loaded,<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>2<sp/>models<sp/>(one<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>first<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>second<sp/>stage,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>another<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>third<sp/>stage)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>path:<sp/>Path/Folder<sp/>containing<sp/>the<sp/>files<sp/>that<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dev:<sp/>Device<sp/>to<sp/>load<sp/>the<sp/>model<sp/>to</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="743"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>files<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>dataset_utils.get_files_from_folder(path,<sp/>endswith=</highlight><highlight class="stringliteral">&quot;.pth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>1<sp/>and<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>model[0].load_state_dict(stg_1_2)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>model[1].load_state_dict(stg_3)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;2&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_4<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_4<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_4<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>model[2].load_state_dict(stg_4)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>stage<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>model[3].load_state_dict(stg_4)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>avoid<sp/>inconsistent<sp/>inference<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model:</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.eval()</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a58a16083e57ad4844a6ae858342363d7" kindref="member">load_model_stg_5_stg_6</ref>(model,<sp/>path,<sp/>dev):</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="817"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>This<sp/>function<sp/>makes<sp/>it<sp/>possible<sp/>to<sp/>load<sp/>parameters<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>fourth<sp/>stage<sp/>to<sp/>the<sp/>fith</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>model:<sp/>Model<sp/>which<sp/>the<sp/>parameters<sp/>will<sp/>be<sp/>loaded,<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>2<sp/>models<sp/>(one<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>first<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>second<sp/>stage,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>another<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>third<sp/>stage)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>path:<sp/>Path/Folder<sp/>containing<sp/>the<sp/>files<sp/>that<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">]<sp/>dev:<sp/>Device<sp/>to<sp/>load<sp/>the<sp/>model<sp/>to</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="823"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="824"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>files<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>dataset_utils.get_files_from_folder(path,<sp/>endswith=</highlight><highlight class="stringliteral">&quot;.pth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>1<sp/>and<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_1_2<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>model[0].load_state_dict(stg_1_2)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_3<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>model[1].load_state_dict(stg_3)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;2&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_4<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_4<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_4<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>model[2].load_state_dict(stg_4)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>Stage<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(files)):</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;3&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files[k]:</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>state<sp/>dict<sp/>to<sp/>each<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>files[k]</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>stg_5<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>type(dev)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>int:</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_5<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cuda:&quot;</highlight><highlight class="normal">+str(dev))</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>GPU<sp/>number&quot;</highlight><highlight class="normal">,<sp/>dev)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stg_5<sp/>=<sp/>torch.load(file_path,<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Loading<sp/>model<sp/>to<sp/>CPU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>model[3].load_state_dict(stg_5)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>stage<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>model[4].load_state_dict(stg_5)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>avoid<sp/>inconsistent<sp/>inference<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model:</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.eval()</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemsecnn__raulkviana_1_1train__model__utils_1a9f287edd155c2f5ca644e55b1e12f738" kindref="member">print_current_time</ref>():</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="914"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Prints<sp/>current<sp/>time</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="916"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>now<sp/>=<sp/>datetime.now()</highlight></codeline>
<codeline lineno="917"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>current_time<sp/>=<sp/>now.strftime(&quot;%H:%M:%S&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Current<sp/>Time<sp/>=&quot;</highlight><highlight class="normal">,<sp/>current_time)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="src/msecnn_raulkviana/train_model_utils.py"/>
  </compounddef>
</doxygen>
