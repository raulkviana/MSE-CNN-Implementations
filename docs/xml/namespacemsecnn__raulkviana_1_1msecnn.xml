<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="namespacemsecnn__raulkviana_1_1msecnn" kind="namespace" language="Python">
    <compoundname>msecnn_raulkviana::msecnn</compoundname>
    <innerclass refid="classmsecnn__raulkviana_1_1msecnn_1_1_loss_function_m_s_e" prot="public">msecnn_raulkviana::msecnn::LossFunctionMSE</innerclass>
    <innerclass refid="classmsecnn__raulkviana_1_1msecnn_1_1_loss_function_m_s_e___ratios" prot="public">msecnn_raulkviana::msecnn::LossFunctionMSE_Ratios</innerclass>
    <innerclass refid="classmsecnn__raulkviana_1_1msecnn_1_1_mse_cnn_stg1" prot="public">msecnn_raulkviana::msecnn::MseCnnStg1</innerclass>
    <innerclass refid="classmsecnn__raulkviana_1_1msecnn_1_1_mse_cnn_stg_x" prot="public">msecnn_raulkviana::msecnn::MseCnnStgX</innerclass>
    <innerclass refid="classmsecnn__raulkviana_1_1msecnn_1_1_q_p__half__mask" prot="public">msecnn_raulkviana::msecnn::QP_half_mask</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemsecnn__raulkviana_1_1msecnn_1aa0b0b79e3437e80b1d904888c744b1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>msecnn_raulkviana.msecnn.init_weights_seq</definition>
        <argsstring>(m)</argsstring>
        <name>init_weights_seq</name>
        <qualifiedname>msecnn_raulkviana.msecnn.init_weights_seq</qualifiedname>
        <param>
          <type>m</type>
          <defname>m</defname>
        </param>
        <briefdescription>
<para>Initializes a given sequential model with the Xavier Initialization (with uniform distribution) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>Model to initiliaze the weights </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Raul/Documents/GitHub/MSE-CNN-Implementations/src/msecnn_raulkviana/msecnn.py" line="68" column="1" bodyfile="C:/Users/Raul/Documents/GitHub/MSE-CNN-Implementations/src/msecnn_raulkviana/msecnn.py" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespacemsecnn__raulkviana_1_1msecnn_1a6e1af768815e66bcb2eef3530feec68e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>msecnn_raulkviana.msecnn.init_weights_single</definition>
        <argsstring>(m)</argsstring>
        <name>init_weights_single</name>
        <qualifiedname>msecnn_raulkviana.msecnn.init_weights_single</qualifiedname>
        <param>
          <type>m</type>
          <defname>m</defname>
        </param>
        <briefdescription>
<para>Initializes a given layer with the Xavier Initialization (with uniform distribution) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer to initiliaze the weights </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Raul/Documents/GitHub/MSE-CNN-Implementations/src/msecnn_raulkviana/msecnn.py" line="77" column="1" bodyfile="C:/Users/Raul/Documents/GitHub/MSE-CNN-Implementations/src/msecnn_raulkviana/msecnn.py" bodystart="77" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>@package docstring 

@file MSECNN.py 

@brief Group of functions and classes that directly contribute for the implementation of the loss function and MSE-CNN
 
@section libraries_MSECNN Libraries 
- torch
- train_model_utils
- math
- numpy

@section classes_MSECNN Classes 
- QP_half_mask
- MseCnnStg1
- MseCnnStgX
- LossFunctionMSE
- LossFunctionMSE_Ratios

@section functions_MSECNN Functions 
- init_weights_seq(m)
- init_weights_single(m)
 
@section global_vars_MSECNN Global Variables 
- None 

@section todo_MSECNN TODO 
- None 

@section license License 
MIT License 
Copyright (c) 2022 Raul Kevin do Espirito Santo Viana
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

@section author_MSECNN Author(s)
- Created by Raul Kevin Viana
- Last time modified is 2023-01-29 22:22:04.142369
</verbatim> </para>
    </detaileddescription>
    <location file="C:/Users/Raul/Documents/GitHub/MSE-CNN-Implementations/src/msecnn_raulkviana/msecnn.py" line="1" column="1"/>
  </compounddef>
</doxygen>
